input {
  file {
    type => "IISLog"
    mode => "read"
    # file_completed_action => "log"
    # file_completed_log_path => "/opt4/logs/"
    path => "/opt4/logs/*.log"
    start_position => "beginning"
  }
}

filter {
  grok {
    enable_metric => false
    match => {
      message => "%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:site} %{WORD:method} %{NOTSPACE:page} %{NOTSPACE:querystring} %{NUMBER:port} %{NOTSPACE:username} %{IPORHOST:clienthost} %{NOTSPACE:useragent} (%{NOTSPACE:referer})? %{NUMBER:response} %{NUMBER:subresponse} %{NUMBER:scstatus} %{NUMBER:time_taken_ms}"
    }
    remove_field => [ "message" ]
  }


  if "_grokparsefailure" not in [tags] {
   date {
     match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ] # "2018-03-09 00:08:17"
     target => "@timestamp"
     timezone => "Europe/Copenhagen"
     remove_field => [ "timestamp" ]
   }
    useragent {
      source => "useragent"
      target => "useragent"
    }

    geoip {
      source => "clienthost"
      target => "client"
      fields => [ "ip", "location" ]
    }

    mutate {
      remove_field => [ "clienthost", "subresponse", "host", "port", "site", "scstatus", "path", "type", "username" ]
    }
  }
}


output {
  if "_grokparsefailure" in [tags] {
    # stdout {}
  }
  if "_grokparsefailure" not in [tags] {
    # stdout {}

    elasticsearch {
        id => "elk-1"
        hosts => [ "http://es:9200" ]
        template => "/opt5/es-iis-template.json"
        index => "iis-log-%{+YYYY.MM.dd}"
        template_name => "log-template"
        template_overwrite => true
    }
  }
}
